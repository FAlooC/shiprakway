{"version":3,"sources":["components/navbar.js","components/divider.js","components/footer.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","src","width","height","alt","Divider","Footer","Home","Fragment","title","frameBorder","allow","allowFullScreen","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yMAmBeA,G,KAjBA,WACX,OACI,yBAAKC,UAAU,iDACX,uBAAGA,UAAU,eAAeC,KAAK,KAC7B,yBACIC,IAA8B,gBAC9BC,MAAM,KACNC,OAAO,KACPJ,UAAU,qCACVK,IAAI,KANZ,iBCCGC,EAJC,SAAC,GAAmB,IAAjBN,EAAgB,EAAhBA,UACf,OAAO,yBAAKA,UAAS,UAAKA,EAAL,eCcVO,EAdA,WACX,OACI,4BAAQP,UAAU,yCACd,kBAAC,EAAD,CAASA,UAAU,iBACnB,wBAAIA,UAAU,cAAd,cACA,kBAAC,EAAD,CAASA,UAAU,iBACnB,uBAAGC,KAAK,gCAAgCD,UAAU,yBAAlD,0BAGA,uBAAGA,UAAU,yBAAb,oBCoEGQ,EA5EF,WACT,OACI,kBAAC,IAAMC,SAAP,KACI,yBAAKT,UAAU,SAASE,IAA8B,kBAAmBG,IAAI,WAC7E,yBAAKL,UAAU,QAAQE,IAA8B,sBAAuBG,IAAI,eAChF,6BAASL,UAAU,gBACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,QAAQE,IAA8B,qBAAsBG,IAAI,UAEnF,yBAAKL,UAAU,wBACX,kBAAC,EAAD,CAASA,UAAU,aACnB,wBAAIA,UAAU,mDAAd,YACA,kBAAC,EAAD,CAASA,UAAU,aACnB,uBAAGA,UAAU,WAAb,gWAWhB,yBAAKA,UAAU,SACX,4BACIU,MAAM,2BACNV,UAAU,cACVE,IAAI,4CACJS,YAAY,IACZC,MAAM,0EACNC,iBAAe,KAGvB,6BAASb,UAAU,gBACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,eACX,kBAAC,EAAD,CAASA,UAAU,aACnB,wBAAIA,UAAU,oCAAd,kDAGA,kBAAC,EAAD,CAASA,UAAU,eAG3B,yBAAKA,UAAU,eACX,yBAAKA,UAAU,sBAAf,mDAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,+CACX,yBAAKA,UAAU,YAAf,+CACA,yBAAKA,UAAU,YAAf,iCACA,yBAAKA,UAAU,YAAf,uEAGA,yBAAKA,UAAU,YAAf,oDACA,yBAAKA,UAAU,YAAf,0EAIJ,yBAAKA,UAAU,6CACX,uBAAGA,UAAU,wBAAb,sPCpDbc,MAVf,WACI,OACI,kBAAC,IAAML,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEQM,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCXvCC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDkHpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b894053c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-light bg-white fixed-top shadow\">\n            <a className=\"navbar-brand\" href=\"/\">\n                <img\n                    src={process.env.PUBLIC_URL + '/img/logo.png'}\n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top ml-2 mr-2\"\n                    alt=\"\"\n                />\n                ShiprakWay\n            </a>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst Divider = ({ className }) => {\n    return <div className={`${className} divider`} />\n}\n\nexport default Divider\n","import React from 'react'\nimport Divider from './divider'\n\nconst Footer = () => {\n    return (\n        <footer className=\"bg-gray p-md-4 p-3 text-center footer\">\n            <Divider className=\"bg-gray-dark\" />\n            <h2 className=\"text-light\">Contact Us</h2>\n            <Divider className=\"bg-gray-dark\" />\n            <a href=\"mailto:support@shiprakway.com\" className=\"text-light p-md-3 p-2\">\n                support@shiprakway.com\n            </a>\n            <p className=\"text-light p-md-3 p-2\">+91 9850512972</p>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nimport Divider from './divider'\n\nconst Home = () => {\n    return (\n        <React.Fragment>\n            <img className=\"header\" src={process.env.PUBLIC_URL + '/img/header.jpg'} alt=\"header\" />\n            <img className=\"arrow\" src={process.env.PUBLIC_URL + '/img/down-arrow.svg'} alt=\"down-arrow\" />\n            <section className=\"px-md-5 px-2\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4 col-12 py-md-5 py-3\">\n                            <img className=\"w-100\" src={process.env.PUBLIC_URL + '/img/logo-name.png'} alt=\"logo\" />\n                        </div>\n                        <div className=\"col-md-8 col-12 py-3\">\n                            <Divider className=\"bg-light\" />\n                            <h2 className=\"text-primary display-4 text-md-left text-center\">About Us</h2>\n                            <Divider className=\"bg-light\" />\n                            <p className=\"content\">\n                                Independent adviser for PET bottle and preform making industry as a growth and\n                                performance excellence partner at ShiprakWay. Having over three decade of professional\n                                experience in various field and worked with top players of the industry. Now available\n                                to the industry for doing loss analysis to improve OEE and helping in business\n                                development.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <div className=\"video\">\n                <iframe\n                    title=\"Shiprakway Youtube video\"\n                    className=\"m-md-5 my-3\"\n                    src=\"https://www.youtube.com/embed/mV8_nuZ9DPg\"\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                ></iframe>\n            </div>\n            <section className=\"px-md-5 px-2\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 py-3\">\n                            <Divider className=\"bg-light\" />\n                            <h2 className=\"text-primary heading text-center\">\n                                Your growth and performance excellence partner\n                            </h2>\n                            <Divider className=\"bg-light\" />\n                        </div>\n                    </div>\n                    <div className=\"row content\">\n                        <div className=\"col-12 text-center\">Specialised in Injection stretch blow moulding</div>\n                    </div>\n                    <div className=\"row py-md-4 py-3\">\n                        <div className=\"col-md-6 col-12 text-secondary text-justify\">\n                            <div className=\"rcorners\">Do you track or measure your OEE regularly?</div>\n                            <div className=\"rcorners\">If yes. Is it on right track?</div>\n                            <div className=\"rcorners\">\n                                If not, what is killing it? Is it speed or Performance or breakdown\n                            </div>\n                            <div className=\"rcorners\">Do you track above, measure and do loss analysis</div>\n                            <div className=\"rcorners\">\n                                Itâ€™s evident that 1% improvement in OEE add 3%~4% to bottom line\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 col-12 text-primary text-justify\">\n                            <p className=\"right-box p-md-4 p-1\">\n                                With three decade of rich experience in this business only. We can be your growth and\n                                performance excellence partner to improve OEE using new concept of online regular\n                                performance review with your plant team using MADAM4 Step Technology\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </React.Fragment>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport Navbar from './components/navbar'\nimport Footer from './components/footer'\nimport Home from './components/home'\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Navbar />\n            <Home />\n            <Footer />\n        </React.Fragment>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}